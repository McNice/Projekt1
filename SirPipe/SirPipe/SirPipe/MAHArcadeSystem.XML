<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MAHArcadeSystem</name>
    </assembly>
    <members>
        <member name="T:MAHArcadeSystem.BaseGame">
            <summary>
            This is the main type for your game
            </summary>
        </member>
        <member name="F:MAHArcadeSystem.InputState.Up">
            <summary>Inputs current state is up</summary>
        </member>
        <member name="F:MAHArcadeSystem.InputState.Down">
            <summary>Inputs current state is down</summary>
        </member>
        <member name="F:MAHArcadeSystem.InputState.Pressed">
            <summary>Inputs last state was up and its current state is down</summary>
        </member>
        <member name="F:MAHArcadeSystem.InputState.Released">
            <summary>Inputs last state was down and its current state is up</summary>
        </member>
        <member name="M:MAHArcadeSystem.InputHandler.GetButtonState(MAHArcadeSystem.PlayerInput)">
            <summary>
            Returns the state of a particular PlayerInput.
            </summary>
            <param name="button">Enumerated value representing the PlayerInput to query.</param>
            <returns></returns>
        </member>
        <member name="M:MAHArcadeSystem.InputHandler.IsKeyDown(MAHArcadeSystem.PlayerInput,System.Boolean)">
            <summary>
            Returns whether a specified key is currently being pressed.
            </summary>
            <param name="button">Enumerated value that specifies the PlayerInput to query.</param>
            <param name="checkLastInputState">If true check the current state, else check the last state</param>
            <returns></returns>
        </member>
        <member name="M:MAHArcadeSystem.InputHandler.IsKeyUp(MAHArcadeSystem.PlayerInput,System.Boolean)">
            <summary>
            Returns whether a specified PlayerInput is currently not pressed.
            </summary>
            <param name="button">Enumerated value that specifies the PlayerInput to query.</param>
            <param name="checkLastInputState">If true check the current state, else check the last state</param>
            <returns></returns>
        </member>
        <member name="T:MAHArcadeSystem.PlayerInput">
             <summary>
             Identifies a particular key on a keyboard / Arcade System.
            
             Parameters:
            		-------- Player One --------
               PlayerOneDown: Player 1 Up, Keyboard key W
               PlayerOneDown: Player 1 Down, Keyboard key S key
               PlayerOneLeft: Player 1 Left, Keyboard key A key
               PlayerOneRight: Player 1 Right, Keyboard key D key
            
               PlayerOneStart: Player 1 Start Button, Keyboard key SPACEBAR
               PlayerOneGreen: Player 1 Green Button, Keyboard key B key
               PlayerOneYellow: Player 1 Yellow Button, Keyboard key N key
               PlayerOneA: Player 1 A Button, Keyboard key M key
               PlayerOneBlue: Player 1 Blue Button, Keyboard key H key
               PlayerOneRed: Player 1 Red Button, Keyboard key J key
               PlayerOneB: Player 1 B Button, Keyboard key K key
            
            		-------- Player Two --------
               PlayerTwoUp: Player 2 Up, Keyboard key UP ARROW
               PlayerTwoDown: Player 2 Down, Keyboard key DOWN ARROW key
               PlayerTwoLeft: Player 2 Left, Keyboard key LEFT ARROW key
               PlayerTwoRight: Player 2 Right, RIGHT ARROW key
            
               PlayerTwoStart: Player 2 Start Button, Numeric keypad 0 key
               PlayerTwoGreen: Player 2 Green Button, Numeric keypad 1 key
               PlayerTwoYellow: PLayer 2 Yellow Button, Numeric keypad 2 key
               PlayerTwoA: Player 2 A Button, Numeric keypad 3 key
               PlayerTwoBlue: Player 2 Blue Button, Numeric keypad 4 key
               PlayerTwoRed: Player 2 Red Button, Numeric keypad 5 key
               PlayerTwoB: Player 2 B Button, Numeric keypad 6 key
             </summary>
        </member>
        <member name="F:MAHArcadeSystem.PlayerInput.PlayerOneStart">
            <summary>Player 1 Start Button, Keyboard key SPACEBAR</summary>
        </member>
        <member name="F:MAHArcadeSystem.PlayerInput.PlayerTwoLeft">
            <summary>Player 2 Left, Keyboard key LEFT ARROW key</summary>
        </member>
        <member name="F:MAHArcadeSystem.PlayerInput.PlayerTwoUp">
            <summary>Player 2 Up, Keyboard key UP ARROW</summary>
        </member>
        <member name="F:MAHArcadeSystem.PlayerInput.PlayerTwoRight">
            <summary>Player 2 Right, RIGHT ARROW key</summary>
        </member>
        <member name="F:MAHArcadeSystem.PlayerInput.PlayerTwoDown">
            <summary>Player 2 Down, Keyboard key DOWN ARROW key</summary>
        </member>
        <member name="F:MAHArcadeSystem.PlayerInput.PlayerOneLeft">
            <summary>Player 1 Left, Keyboard key A key</summary>
        </member>
        <member name="F:MAHArcadeSystem.PlayerInput.PlayerOneGreen">
            <summary>Player 1 Green Button, Keyboard key B key</summary>
        </member>
        <member name="F:MAHArcadeSystem.PlayerInput.PlayerOneRight">
            <summary>Player 1 Right, Keyboard key D key</summary>
        </member>
        <member name="F:MAHArcadeSystem.PlayerInput.PlayerOneBlue">
            <summary>Player 1 Blue Button, Keyboard key H key</summary>
        </member>
        <member name="F:MAHArcadeSystem.PlayerInput.PlayerOneRed">
            <summary>Player 1 Red Button, Keyboard key J key</summary>
        </member>
        <member name="F:MAHArcadeSystem.PlayerInput.PlayerOneB">
            <summary>Player 1 B Button, Keyboard key K key</summary>
        </member>
        <member name="F:MAHArcadeSystem.PlayerInput.PlayerOneA">
            <summary>Player 1 A Button, Keyboard key M key</summary>
        </member>
        <member name="F:MAHArcadeSystem.PlayerInput.PlayerOneYellow">
            <summary>Player 1 Yellow Button, Keyboard key N key</summary>
        </member>
        <member name="F:MAHArcadeSystem.PlayerInput.PlayerOneDown">
            <summary>Player 1 Down, Keyboard key S key</summary>
        </member>
        <member name="F:MAHArcadeSystem.PlayerInput.PlayerOneUp">
            <summary>Player 1 Up, Keyboard key W</summary>
        </member>
        <member name="F:MAHArcadeSystem.PlayerInput.PlayerTwoStart">
            <summary>Player 2 Start Button, Numeric keypad 0 key</summary>
        </member>
        <member name="F:MAHArcadeSystem.PlayerInput.PlayerTwoGreen">
            <summary>Player 2 Green Button, Numeric keypad 1 key</summary>
        </member>
        <member name="F:MAHArcadeSystem.PlayerInput.PlayerTwoYellow">
            <summary>PLayer 2 Yellow Button, Numeric keypad 2 key</summary>
        </member>
        <member name="F:MAHArcadeSystem.PlayerInput.PlayerTwoA">
            <summary>Player 2 A Button, Numeric keypad 3 key</summary>
        </member>
        <member name="F:MAHArcadeSystem.PlayerInput.PlayerTwoBlue">
            <summary>Player 2 Blue Button, Numeric keypad 4 key</summary>
        </member>
        <member name="F:MAHArcadeSystem.PlayerInput.PlayerTwoRed">
            <summary>Player 2 Red Button, Numeric keypad 5 key</summary>
        </member>
        <member name="F:MAHArcadeSystem.PlayerInput.PlayerTwoB">
            <summary>Player 2 B Button, Numeric keypad 6 key</summary>
        </member>
        <member name="M:MAHArcadeSystem.Renderer.Clear(Microsoft.Xna.Framework.Color)">
            <summary>
            Clears resource buffers.
            </summary>
            <param name="color">Set this color value in all buffers.</param>
        </member>
        <member name="M:MAHArcadeSystem.Renderer.SetRenderTarget(Microsoft.Xna.Framework.Graphics.RenderTarget2D)">
            <summary>
            Sets a new render target for this GraphicsDevice.
            </summary>
            <param name="renderTarget">A new render target for the device, or null to set the device render target 
            to the back buffer of the device.</param>
        </member>
        <member name="M:MAHArcadeSystem.Renderer.Begin">
            <summary>
            Begins a sprite batch operation using deferred sort and default state objects
            (BlendState.AlphaBlend, SamplerState.LinearClamp, DepthStencilState.None,
            RasterizerState.CullCounterClockwise).
            </summary>
        </member>
        <member name="M:MAHArcadeSystem.Renderer.Begin(Microsoft.Xna.Framework.Graphics.SpriteSortMode,Microsoft.Xna.Framework.Graphics.BlendState)">
            <summary>
            Begins a sprite batch operation using the specified sort and blend state
            object and default state objects (DepthStencilState.None, SamplerState.LinearClamp,
            RasterizerState.CullCounterClockwise). If you pass a null blend state, the
            default is BlendState.AlphaBlend.
            </summary>
            <param name="sortMode">Sprite drawing order.</param>
            <param name="blendState">Blending options.</param>
        </member>
        <member name="M:MAHArcadeSystem.Renderer.Begin(Microsoft.Xna.Framework.Graphics.SpriteSortMode,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Graphics.DepthStencilState,Microsoft.Xna.Framework.Graphics.RasterizerState)">
            <summary>
            Begins a sprite batch operation using the specified sort, blend, sampler,
            depth stencil and rasterizer state objects. Passing null for any of the state
            objects selects the default default state objects (BlendState.AlphaBlend,
            SamplerState.LinearClamp, DepthStencilState.None, RasterizerState.CullCounterClockwise).
            </summary>
            <param name="sortMode"></param>
            <param name="blendState"></param>
            <param name="samplerState"></param>
            <param name="depthStencilState"></param>
            <param name="rasterizerState"></param>
        </member>
        <member name="M:MAHArcadeSystem.Renderer.Begin(Microsoft.Xna.Framework.Graphics.SpriteSortMode,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Graphics.DepthStencilState,Microsoft.Xna.Framework.Graphics.RasterizerState,Microsoft.Xna.Framework.Graphics.Effect)">
            <summary>
            Begins a sprite batch operation using the specified sort, blend, sampler,
            depth stencil and rasterizer state objects, plus a custom effect. Passing
            null for any of the state objects selects the default default state objects
            (BlendState.AlphaBlend, DepthStencilState.None, RasterizerState.CullCounterClockwise,
            SamplerState.LinearClamp). Passing a null effect selects the default Renderer
            Class shader.
            </summary>
            <param name="sortMode">Sprite drawing order.</param>
            <param name="blendState">Blending options.</param>
            <param name="samplerState">Texture sampling options.</param>
            <param name="depthStencilState">Depth and stencil options.</param>
            <param name="rasterizerState">Rasterization options.</param>
            <param name="effect">Effect state options.</param>
        </member>
        <member name="M:MAHArcadeSystem.Renderer.Begin(Microsoft.Xna.Framework.Graphics.SpriteSortMode,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Graphics.DepthStencilState,Microsoft.Xna.Framework.Graphics.RasterizerState,Microsoft.Xna.Framework.Graphics.Effect,Microsoft.Xna.Framework.Matrix)">
            <summary>
            Begins a sprite batch operation using the specified sort, blend, sampler,
            depth stencil, rasterizer state objects, plus a custom effect and a 2D transformation
            matrix. Passing null for any of the state objects selects the default default
            state objects (BlendState.AlphaBlend, DepthStencilState.None, RasterizerState.CullCounterClockwise,
            SamplerState.LinearClamp). Passing a null effect selects the default Renderer
            Class shader.
            </summary>
            <param name="sortMode">Sprite drawing order.</param>
            <param name="blendState">Blending options.</param>
            <param name="samplerState">Texture sampling options.</param>
            <param name="depthStencilState">Depth and stencil options.</param>
            <param name="rasterizerState">Rasterization options.</param>
            <param name="effect">Effect state options.</param>
            <param name="transformMatrix">Transformation matrix for scale, rotate, translate options.</param>
        </member>
        <member name="M:MAHArcadeSystem.Renderer.Draw(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color)">
            <summary>
            Adds a sprite to a batch of sprites for rendering using the specified texture,
            destination rectangle, and color. Reference page contains links to related
            code samples.
            </summary>
            <param name="texture">A texture.</param>
            <param name="destinationRectangle">A rectangle that specifies (in screen coordinates) the destination for drawing
            the sprite.</param>
            <param name="color">The color to tint a sprite. Use Color.White for full color with no tinting.</param>
        </member>
        <member name="M:MAHArcadeSystem.Renderer.Draw(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            Adds a sprite to a batch of sprites for rendering using the specified texture,
            position and color. Reference page contains links to related code samples.
            </summary>
            <param name="texture"> A texture.</param>
            <param name="position">The location (in screen coordinates) to draw the sprite.</param>
            <param name="color">The color to tint a sprite. Use Color.White for full color with no tinting.</param>
        </member>
        <member name="M:MAHArcadeSystem.Renderer.Draw(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Rectangle,System.Nullable{Microsoft.Xna.Framework.Rectangle},Microsoft.Xna.Framework.Color)">
            <summary>
            Adds a sprite to a batch of sprites for rendering using the specified texture,
            destination rectangle, source rectangle, and color.
            </summary>
            <param name="texture"> A texture.</param>
            <param name="destinationRectangle">A rectangle that specifies (in screen coordinates) the destination for drawing
            the sprite. If this rectangle is not the same size as the source rectangle,
            the sprite will be scaled to fit.</param>
            <param name="sourceRectangle">A rectangle that specifies (in texels) the source texels from a texture.
            Use null to draw the entire texture.</param>
            <param name="color">The color to tint a sprite. Use Color.White for full color with no tinting.</param>
        </member>
        <member name="M:MAHArcadeSystem.Renderer.Draw(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Rectangle},Microsoft.Xna.Framework.Color)">
            <summary>
            Adds a sprite to a batch of sprites for rendering using the specified texture,
            position, source rectangle, and color.
            </summary>
            <param name="texture">A texture.</param>
            <param name="position">The location (in screen coordinates) to draw the sprite.</param>
            <param name="sourceRectangle">A rectangle that specifies (in texels) the source texels from a texture.
            Use null to draw the entire texture.</param>
            <param name="color">The color to tint a sprite. Use Color.White for full color with no tinting.</param>
        </member>
        <member name="M:MAHArcadeSystem.Renderer.Draw(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Rectangle,System.Nullable{Microsoft.Xna.Framework.Rectangle},Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)">
            <summary>
            Adds a sprite to a batch of sprites for rendering using the specified texture,
            destination rectangle, source rectangle, color, rotation, origin, effects
            and layer.
            </summary>
            <param name="texture">A texture.</param>
            <param name="destinationRectangle">A rectangle that specifies (in screen coordinates) the destination for drawing
            the sprite. If this rectangle is not the same size as the source rectangle,
            the sprite will be scaled to fit.</param>
            <param name="sourceRectangle">A rectangle that specifies (in texels) the source texels from a texture.
            Use null to draw the entire texture.</param>
            <param name="color">The color to tint a sprite. Use Color.White for full color with no tinting.</param>
            <param name="rotation">Specifies the angle (in radians) to rotate the sprite about its center.</param>
            <param name="origin">The sprite origin; the default is (0,0) which represents the upper-left corner.</param>
            <param name="effects">Effects to apply.</param>
            <param name="layerDepth">The depth of a layer. By default, 0 represents the front layer and 1 represents
            a back layer. Use SpriteSortMode if you want sprites to be sorted during
            drawing.</param>
        </member>
        <member name="M:MAHArcadeSystem.Renderer.Draw(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Rectangle},Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)">
            <summary>
            Adds a sprite to a batch of sprites for rendering using the specified texture,
            position, source rectangle, color, rotation, origin, scale, effects, and
            layer. Reference page contains links to related code samples.
            </summary>
            <param name="texture">A texture.</param>
            <param name="position">The location (in screen coordinates) to draw the sprite.</param>
            <param name="sourceRectangle">A rectangle that specifies (in texels) the source texels from a texture.
            Use null to draw the entire texture.</param>
            <param name="color">The color to tint a sprite. Use Color.White for full color with no tinting.</param>
            <param name="rotation">Specifies the angle (in radians) to rotate the sprite about its center.</param>
            <param name="origin">The sprite origin; the default is (0,0) which represents the upper-left corner.</param>
            <param name="scale">Scale factor.</param>
            <param name="effects">Effects to apply.</param>
            <param name="layerDepth">The depth of a layer. By default, 0 represents the front layer and 1 represents
            a back layer. Use SpriteSortMode if you want sprites to be sorted during
            drawing.</param>
        </member>
        <member name="M:MAHArcadeSystem.Renderer.Draw(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Rectangle},Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)">
            <summary>
            Adds a sprite to a batch of sprites for rendering using the specified texture,
            position, source rectangle, color, rotation, origin, scale, effects and layer.
            Reference page contains links to related code samples.
            </summary>
            <param name="texture">A texture.</param>
            <param name="position">The location (in screen coordinates) to draw the sprite.</param>
            <param name="sourceRectangle">A rectangle that specifies (in texels) the source texels from a texture.
            Use null to draw the entire texture.</param>
            <param name="color">The color to tint a sprite. Use Color.White for full color with no tinting.</param>
            <param name="rotation">Specifies the angle (in radians) to rotate the sprite about its center.</param>
            <param name="origin">The sprite origin; the default is (0,0) which represents the upper-left corner.</param>
            <param name="scale">Scale factor.</param>
            <param name="effects">Effects to apply.</param>
            <param name="layerDepth">The depth of a layer. By default, 0 represents the front layer and 1 represents
            a back layer. Use SpriteSortMode if you want sprites to be sorted during
            drawing.</param>
        </member>
        <member name="M:MAHArcadeSystem.Renderer.DrawString(Microsoft.Xna.Framework.Graphics.SpriteFont,System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            Adds a string to a batch of sprites for rendering using the specified font,
            text, position, and color.
            </summary>
            <param name="spriteFont">A font for diplaying text.</param>
            <param name="text">A text string.</param>
            <param name="position">The location (in screen coordinates) to draw the sprite.</param>
            <param name="color">The color to tint a sprite. Use Color.White for full color with no tinting.</param>
        </member>
        <member name="M:MAHArcadeSystem.Renderer.DrawString(Microsoft.Xna.Framework.Graphics.SpriteFont,System.Text.StringBuilder,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            Adds a string to a batch of sprites for rendering using the specified font,
            text, position, and color.
            </summary>
            <param name="spriteFont">A font for diplaying text.</param>
            <param name="text">Text string.</param>
            <param name="position">The location (in screen coordinates) to draw the sprite.</param>
            <param name="color">The color to tint a sprite. Use Color.White for full color with no tinting.</param>
        </member>
        <member name="M:MAHArcadeSystem.Renderer.DrawString(Microsoft.Xna.Framework.Graphics.SpriteFont,System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)">
            <summary>
            Adds a string to a batch of sprites for rendering using the specified font,
            text, position, color, rotation, origin, scale, effects and layer.
            </summary>
            <param name="spriteFont">A font for diplaying text.</param>
            <param name="text">A text string.</param>
            <param name="position">The location (in screen coordinates) to draw the sprite.</param>
            <param name="color">The color to tint a sprite. Use Color.White for full color with no tinting.</param>
            <param name="rotation">Specifies the angle (in radians) to rotate the sprite about its center.</param>
            <param name="origin">The sprite origin; the default is (0,0) which represents the upper-left corner.</param>
            <param name="scale">Scale factor.</param>
            <param name="effects">Effects to apply.</param>
            <param name="layerDepth">The depth of a layer. By default, 0 represents the front layer and 1 represents
            a back layer. Use SpriteSortMode if you want sprites to be sorted during
            drawing.</param>
        </member>
        <member name="M:MAHArcadeSystem.Renderer.DrawString(Microsoft.Xna.Framework.Graphics.SpriteFont,System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)">
            <summary>
            Adds a string to a batch of sprites for rendering using the specified font,
            text, position, color, rotation, origin, scale, effects and layer.
            </summary>
            <param name="spriteFont">A font for diplaying text.</param>
            <param name="text">A text string.</param>
            <param name="position">The location (in screen coordinates) to draw the sprite.</param>
            <param name="color">The color to tint a sprite. Use Color.White for full color with no tinting.</param>
            <param name="rotation">Specifies the angle (in radians) to rotate the sprite about its center.</param>
            <param name="origin">The sprite origin; the default is (0,0) which represents the upper-left corner.</param>
            <param name="scale">Scale factor.</param>
            <param name="effects">Effects to apply.</param>
            <param name="layerDepth">The depth of a layer. By default, 0 represents the front layer and 1 represents
            a back layer. Use SpriteSortMode if you want sprites to be sorted during
            drawing.</param>
        </member>
        <member name="M:MAHArcadeSystem.Renderer.DrawString(Microsoft.Xna.Framework.Graphics.SpriteFont,System.Text.StringBuilder,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)">
            <summary>
            Adds a string to a batch of sprites for rendering using the specified font,
            text, position, color, rotation, origin, scale, effects and layer.
            </summary>
            <param name="spriteFont">A font for diplaying text.</param>
            <param name="text">Text string.</param>
            <param name="position">The location (in screen coordinates) to draw the sprite.</param>
            <param name="color">The color to tint a sprite. Use Color.White for full color with no tinting.</param>
            <param name="rotation">Specifies the angle (in radians) to rotate the sprite about its center.</param>
            <param name="origin">The sprite origin; the default is (0,0) which represents the upper-left corner.</param>
            <param name="scale">Scale factor.</param>
            <param name="effects">Effects to apply.</param>
            <param name="layerDepth">The depth of a layer. By default, 0 represents the front layer and 1 represents
            a back layer. Use SpriteSortMode if you want sprites to be sorted during
            drawing.</param>
        </member>
        <member name="M:MAHArcadeSystem.Renderer.DrawString(Microsoft.Xna.Framework.Graphics.SpriteFont,System.Text.StringBuilder,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)">
            <summary>
            Adds a string to a batch of sprites for rendering using the specified font,
            text, position, color, rotation, origin, scale, effects and layer.
            </summary>
            <param name="spriteFont">A font for diplaying text.</param>
            <param name="text">Text string.</param>
            <param name="position">The location (in screen coordinates) to draw the sprite.</param>
            <param name="color">The color to tint a sprite. Use Color.White for full color with no tinting.</param>
            <param name="rotation">Specifies the angle (in radians) to rotate the sprite about its center.</param>
            <param name="origin">The sprite origin; the default is (0,0) which represents the upper-left corner.</param>
            <param name="scale">Scale factor.</param>
            <param name="effects">Effects to apply.</param>
            <param name="layerDepth">The depth of a layer. By default, 0 represents the front layer and 1 represents
            a back layer. Use SpriteSortMode if you want sprites to be sorted during
            drawing.</param>
        </member>
        <member name="M:MAHArcadeSystem.Renderer.End">
            <summary>
            Flushes the sprite batch and restores the device state to how it was before
            Begin was called.
            </summary>
        </member>
    </members>
</doc>
